// Excerpt from hgt.inter-op-ssa
///
/// SHAPE INFORMATION
///
VARIABLETABLE{
  InitialVariableAndWeight{
    (EDGEWISE, "raw_attn_tmp2");(EDGEWISE, "msg");
  }
  Shape{
    (DSTNODE, "attn_sum"):['dstnode','scalar']
    (EDGEWISE, "raw_attn"):['unique_node_etype','scalar']
    (EDGEWISE, "raw_attn_tmp2"):['unique_node_etype','scalar']
    (EDGEWISE, "attn"):['unique_node_etype','scalar']
    (DSTNODE, "output"):['dstnode','vector']
    (EDGEWISE, "msg"):['unique_node_etype','vector']
    (EDGEWISE, "output_tmp1"):['unique_node_etype','vector']
  }
}

///
/// DAG
///
DAG{
1:(EDGEWISE, "raw_attn") = Exponential(input = (EDGEWISE, "raw_attn_tmp2"));
// edge softmax
2:(DSTNODE, "attn_sum") = NodeSumAccumulation(input = (EDGEWISE, "raw_attn"));
3:(EDGEWISE, "attn") = ScalarDivide(left = (EDGEWISE, "raw_attn"), right = (DSTNODE, "attn_sum"));
4:(EDGEWISE, "output_tmp1") = EdgeScalarVectorMul(scalar=(EDGEWISE, "attn"), vector=(EDGEWISE, "msg"));
5:(DSTNODE, "output") = NodeSumAccumulation(input=(EDGEWISE,"output_tmp1"));
}

///
/// OPSPEC
/// each op has a dedicated scope <optype>_<opidx> in which there is a json substring that describes the specification.
OPSPEC{
  traversal_1{
    {
      "inputs": [["UNIQUE_NODE_ETYPE","raw_attn_tmp2"]],
      "outputs": [["UNIQUE_NODE_ETYPE","raw_attn"]],
      "schedule": "type1",
      "operators":{
        "1:loop":{
          "loop_variable":"idx_edge",
          "loop_begin":"0",
          "loop_end":"num_edges",
          "loop_step":"blockDim.y*gridDim.y",
          "operators":{
            "1:op":{
              "op":"expf",
              "op_type":"elementwise",
              "inputs":[["UNIQUE_NODE_ETYPE","raw_attn_tmp2"]],
              "output":["UNIQUE_NODE_ETYPE","raw_attn"]
            }
          }
        }
      }
    }
  }
  traversal_2{
    {
      "inputs": [["UNIQUE_NODE_ETYPE","raw_attn"]],
      "outputs": [["DSTNODE","attn_sum"]],
      "schedule": "type1",
      "operators":{
        "1:loop":{
          "loop_variable":"idx_edge",
          "loop_begin":"0",
          "loop_end":"num_edges",
          "loop_step":"blockDim.y*gridDim.y",
          "operators":{
            "1:op":{
              "op":"sum",
              "op_type":{
                "type":"accumulation",
                "sink":"node"
              },
              "inputs":[["UNIQUE_NODE_ETYPE","raw_attn"]],
              "output":["DSTNODE","attn_sum"]
            }
          }
        }
      }
    }
  }
  traversal_3{
    {
      "inputs": [["UNIQUE_NODE_ETYPE","raw_attn"],["DSTNODE","attn_sum"]],
      "outputs": [["UNIQUE_NODE_ETYPE","attn"]],
      "schedule": "type1",
      "operators":{
        "1:loop":{
          "loop_variable":"idx_edge",
          "loop_begin":"0",
          "loop_end":"num_edges",
          "loop_step":"blockDim.y*gridDim.y",
          "operators":{
            "1:op":{
              "op":"divide",
              "broadcast":{
                "operand":"right",
                "source":"nodewise"
              },
              "inputs":[
                ["UNIQUE_NODE_ETYPE","raw_attn"],
                ["DSTNODE","attn_sum"]
              ],
              "output":["UNIQUE_NODE_ETYPE","attn"]
            }
          }
        }
      }
    }
  }
  traversal_4{
    {
      "inputs": [["UNIQUE_NODE_ETYPE","attn"],["UNIQUE_NODE_ETYPE","msg"]],
      "outputs": [["UNIQUE_NODE_ETYPE","output_tmp1"]],
      "schedule": "type2",
      "operators":{
        "1:loop":{
          "loop_variable":"idx_edge",
          "loop_begin":"0",
          "loop_end":"num_edges",
          "loop_step":"gridDim.y",
          "operators":{
            "1:loop":{
              "loop_variable":"idx_feature",
              "loop_begin":"0",
              "loop_end":"num_features",
              "loop_step":"gridDim.x*blockDim.x",
              "operators":{
                "1:op":{
                  "op":"mul",
                  "broadcast":{
                    "operand":"left",
                    "source":"edgewise"
                  },
                  "inputs":[
                    ["UNIQUE_NODE_ETYPE","attn"],
                    ["UNIQUE_NODE_ETYPE","msg"]
                  ],
                  "output":["UNIQUE_NODE_ETYPE","output_tmp1"]
                }
              }
            }
          }
        }
      }
    }
  }
  traversal_5{
    {
      "inputs": [["UNIQUE_NODE_ETYPE","output_tmp1"]],
      "outputs": [["DSTNODE","output"]],
      "schedule": "type2",
      "operators":{
        "1:loop":{
          "loop_variable":"idx_edge",
          "loop_begin":"0",
          "loop_end":"num_edges",
          "loop_step":"gridDim.y",
          "operators":{
            "1:loop":{
              "loop_variable":"idx_feature",
              "loop_begin":"0",
              "loop_end":"num_features",
              "loop_step":"gridDim.x*blockDim.x",
              "operators":{
                "1:op":{
                  "op":"sum",
                  "op_type":{
                    "type":"accumulation",
                    "sink":"node"
                  },
                  "inputs":[["UNIQUE_NODE_ETYPE","output_tmp1"]],
                  "output":["DSTNODE","output"]
                }
              }
            }
          }
        }
      }
    }
  }
}