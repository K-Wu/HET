///
/// SHAPE INFORMATION
///
// TODO: fullfil this

///
/// DAG
///
// TODO: variable name rule varname(_delta)(_term[0-9])(_tmp[0-9])(_transposed)
DAG{
(EDGEWISE, "attn_delta") = EdgeInnerProduct(left = (DSTNODE, "output"), right = (EDGEWISE, "msg"));
(EDGEWISE, "msg_delta) = EdgeScalarVectorMul(scalar = (EDGEWISE, "attn"), vector = (NODEWISE, "output"));

(EDGEWISE, "raw_attn_delta_term1") = Divide(left = (EDGEWISE, "attn_delta"), right = (DSTNODE, "attn_sum"));
// TODO: implement a pass that reduce the scope of this following statement from edge-wise to dstnode-wise
(EDGEWISE, "attn_sum_delta_tmp1") = Multiply(left = (DSTNODE, "attn_sum"), right = (EDGEWISE, "attn_sum"));

(EDGEWISE, "attn_sum_delta_tmp2") = Divide(left = (EDGEWISE, "raw_attn"), right = (EDGEWISE, "attn_sum_delta_tmp1"));
(EDGEWISE, "attn_sum_delta_tmp3") = Negative(input = (EDGEWISE, "attn_sum_delta_tmp2"));
(DSTNODE, "attn_sum_delta") = NodeSumAccumulation(input=(EDGEWISE, "attn_sum_delta_tmp3"));

(EDGEWISE, "raw_attn_delta") = Add(left = (EDGEWISE, "raw_attn_delta_term1"), right = (DSTNODE, "attn_sum_delta"));

(EDGEWISE, "raw_attn_tmp2_delta") = InverseExp(input = (EDGEWISE, "raw_attn_delta"));
(EDGEWISE, "raw_attn_tmp1_delta") = InverseLeakyRelu(input = (EDGEWISE, "raw_attn_tmp2_delta"));
// TODO: note that EDGETYPE weight delta may need careful handling during code generation: they use increment operators in the frontend and here we explicitly express that via a new operator EdgeTypeSumAccumulation.
(EDGEWISE, "attn_vec_delta_term") = EdgeScalarVectorMul(scalar = (EDGEWISE, "raw_attn_tmp1_delta"), vector = (EDGEWISE, "zizj"));
(attn_vec_delta, EDGETYPE) = EdgeTypeSumAccumulation(input = (EDGEWISE, "attn_vec_delta_term"));
(EDGEWISE, "zizj_delta") = EdgeInnerProduct(left = (DSTNODE, "output"), right = (attn_vec_delta, EDGETYPE));
(EDGEWISE, "zi_delta"), (EDGEWISE, "zj_delta") = Split(input = (EDGEWISE, "zizj_delta"));
(W_transposed, EDGETYPE) = Transpose(input = (W, EDGETYPE));
(SRCNODE, "feature_delta") = OuterProduct(left = (EDGEWISE, "zi_delta"), right = (W_transposed, EDGETYPE));
(DSTNODE, "feature_delta") = OuterProduct(left = (EDGEWISE, "zh_delta"), right = (W_transposed, EDGETYPE));
(EDGEWISE, "W_delta_term1_tmp1") = OuterProduct(left = (SRCNODE, "feature"), right = (EDGEWISE, "zi_delta"));
(W_delta_term1, EDGETYPE) = EdgeTypeSumAccumulation(input =(EDGEWISE, "W_delta_term1_tmp1"));
(EDGEWISE, "W_delta_term1_tmp2") = OuterProduct(left = (DSTNODE, "feature"), right = (EDGEWISE, "zj_delta"));
(W_delta_term2, EDGETYPE) = EdgeTypeSumAccumulation(input =(EDGEWISE, "W_delta_term1_tmp2"));
(W_delta, EDGETYPE) = Add(left = (W_delta_term1, EDGETYPE), right = (W_delta_term2, EDGETYPE));
}
