for e in g.edges():
    e["zi"] = e.src.feature * W[e.etype]
    e["zj"] = e.dst.feature * W[e.etype]
    e["zizj"] = concat([e.zi, e.zj])
    e["raw_attn_tmp"] = inner_product(attn_vec[e.etype], e.zizj)
    e["raw_attn_tmp2"] = leakyrelu(e.raw_attn_tmp)
    e["raw_attn"] = exp(e.raw_attn_tmp2)
    e["msg"] = e["zi"]

# edge softmax
for n in g.dst_nodes():
    n["attn_sum"] = 0.0
    for e in n.incoming_edges():
        n["attn_sum"] += e.raw_attn
for e in g.edges():
    e["attn"] = e.raw_attn / e.dst.attn_sum

# node accumulation
for n in g.dst_nodes():
    n["output"] = 0.0
    for e in n.incoming_edges():
        n["output"] += e.attn * e.msg